<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:controls="using:Uno.Material.Controls"
					xmlns:toolkit="using:Uno.UI.Toolkit"
					xmlns:ios="http://uno.ui/ios"
					xmlns:android="http://uno.ui/android"
					xmlns:xamarin="http://uno.ui/xamarin"
					xmlns:wasm="http://uno.ui/wasm"
					xmlns:not_win="http://uno.ui/not_win"
					mc:Ignorable="d ios android wasm not_win">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Application/Colors.xaml" />
	</ResourceDictionary.MergedDictionaries>

	<!-- Text ToggleButton Variables -->
	<SolidColorBrush x:Key="ToggleButtonTextLabelBrush"
					 Color="{ThemeResource MaterialPrimaryColor}" />

	<!-- Other ToggleButton Variables -->
	<CornerRadius x:Key="ToggleButtonBorderRadius">4</CornerRadius>
	<FontFamily x:Key="ToggleButtonFontFamily">Roboto</FontFamily>
	<x:Double x:Key="ToggleButtonFontSize">14</x:Double>
	<Thickness x:Key="ToggleButtonPadding">16,8</Thickness>

	<Style x:Key="MaterialTextToggleButtonStyle"
		   TargetType="ToggleButton">
		<Setter Property="Foreground"
				Value="{StaticResource ToggleButtonTextLabelBrush}" />
		<Setter Property="Background"
				Value="Transparent" />
		<Setter Property="BorderThickness"
				Value="0" />
		<Setter Property="Padding"
				Value="{ThemeResource ToggleButtonPadding}" />
		<Setter Property="CornerRadius"
				Value="{StaticResource ToggleButtonBorderRadius}" />
		<Setter Property="MinHeight"
				Value="40" />
		<Setter Property="FontFamily"
				Value="{ThemeResource ToggleButtonFontFamily}" />
		<Setter Property="FontSize"
				Value="{ThemeResource ToggleButtonFontSize}" />
		<Setter Property="UseSystemFocusVisuals"
				Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Grid x:Name="Root"
						  Background="{TemplateBinding Background}"
						  BorderBrush="{TemplateBinding BorderBrush}"
						  BorderThickness="{TemplateBinding BorderThickness}"
						  CornerRadius="{TemplateBinding CornerRadius}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal">
									<VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 From="0"
														 To="1">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</Storyboard>
								</VisualState>

								<VisualState x:Name="Pressed">
									<!-- https://github.com/unoplatform/uno/issues/5099 -->
									<xamarin:VisualState.Setters>
										<Setter Target="HoverOverlay.Opacity"
												Value="0" />
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</xamarin:VisualState.Setters>
									<win:Storyboard>
										<DoubleAnimation Storyboard.TargetName="HoverOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>

										<DoubleAnimation Storyboard.TargetName="FocusedOverlay"
														 Storyboard.TargetProperty="Opacity"
														 Duration="{StaticResource MaterialAnimationDuration}"
														 To="0">
											<DoubleAnimation.EasingFunction>
												<CubicEase EasingMode="EaseIn" />
											</DoubleAnimation.EasingFunction>
										</DoubleAnimation>
									</win:Storyboard>
								</VisualState>

								<VisualState x:Name="Disabled">
									<VisualState.Setters>
										<Setter Target="ContentPresenter.Foreground"
												Value="{StaticResource MaterialOnSurfaceLowBrush}" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Checked" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="PointerFocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="1" />
									</VisualState.Setters>
								</VisualState>
								<VisualState x:Name="Unfocused">
									<VisualState.Setters>
										<Setter Target="FocusedOverlay.Opacity"
												Value="0" />
									</VisualState.Setters>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<!-- Border for PointedOver State -->
						<Border x:Name="HoverOverlay"
								Background="{StaticResource MaterialOnSurfaceHoverBrush}"
								Opacity="0" />

						<!-- Border for Focus State -->
						<Border x:Name="FocusedOverlay"
								Background="{StaticResource MaterialOnSurfaceFocusedBrush}"
								Opacity="0" />

						<!-- Border for Dragged/Selected State -->
						<!-- Todo: Add ElevatedView on Dragged/Selected state of button -->
						<Border x:Name="SelectedOverlay"
								Background="{StaticResource MaterialOnSurfaceFocusedBrush}"
								Opacity="0" />

						<!-- Ripple effect -->
						<controls:Ripple x:Name="ContentPresenter"
										 Feedback="{StaticResource MaterialOnSurfaceFocusedBrush}"
										 BorderBrush="{TemplateBinding BorderBrush}"
										 BorderThickness="{TemplateBinding BorderThickness}"
										 Content="{TemplateBinding Content}"
										 ContentTemplate="{TemplateBinding ContentTemplate}"
										 ContentTransitions="{TemplateBinding ContentTransitions}"
										 CornerRadius="{TemplateBinding CornerRadius}"
										 FontFamily="{TemplateBinding FontFamily}"
										 FontSize="{TemplateBinding FontSize}"
										 Padding="{TemplateBinding Padding}"
										 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
										 AutomationProperties.AccessibilityView="Raw" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
